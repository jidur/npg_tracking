#!/usr/bin/env perl -T

use strict;
use warnings;
use CGI qw/:standard/;
use GD;
use English qw(-no_match_vars);
use Readonly;
use Carp;

Readonly::Scalar my $SHIFT_EIGHT => 8;

my $url_with_path = url(-path_info => 1);
my ($partition) = ($url_with_path || q()) =~ /\/([a-z0-9]+)\Z/smx;
local $ENV{'PATH'} = join q(:), qw(/bin /usr/bin);
if (!$partition) {
  croak qq[Failed to get partition from $url_with_path];
}

## no critic (ValuesAndExpressions::ProhibitMagicNumbers)
my $gd    = GD::Image->new(40,40);
my $white = $gd->colorAllocate(255,255,255); # background colour
my $grey  = $gd->colorAllocate(128,128,128);
my $black = $gd->colorAllocate(0,0,0);
my $green = $gd->colorAllocate(140,250,140);
my $red   = $gd->colorAllocate(250,140,140);
## use critic

my $command = qq[df /nfs/$partition];
## no critic (InputOutput::RequireBriefOpen)
open my $fh, q(-|), $command or carp "Failed to open a file handle for $command: $ERRNO";
my $blk = q();

if ($fh) {
  local $RS = undef;
  $blk   = <$fh>;
  my $child_error = $CHILD_ERROR >> $SHIFT_EIGHT;
  if ($child_error != 0) {
    croak qq[Error in pipe '$command': $child_error];
  }
  close $fh or carp
    qq[Failed to close a filehadle after executing '$command'];
}
## use critic

## no critic (ValuesAndExpressions::ProhibitMagicNumbers)
my ($perc) = $blk =~ /(\d+)%/smx;
$gd->filledArc(20,20,38,38,0,360,$red);
if (defined $perc) {
  $gd->filledArc(20,20,38,38,0,(100 - $perc)*3.6,$green);
}

$gd->setAntiAliased($grey);
$gd->arc(20,20,38,38,0,360,gdAntiAliased);

$gd->string(gdSmallFont, 8, 6,  $partition, $black);
$perc = defined $perc ? $perc : q();
$gd->string(gdSmallFont, 14,18, $perc. q(%), $black);
## use critic

print "Content-type: image/png\n\n" or croak $ERRNO;
print $gd->png() or croak $ERRNO;

exit 0;
